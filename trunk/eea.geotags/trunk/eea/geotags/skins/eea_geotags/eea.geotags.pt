<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="eea.geotags">

  <head><title></title></head>

  <body>

  <tal:comment condition="nothing">
<!--
Macro parameters:

  @@param hideMap

Usage:

  <metal:popup use-macro="here/eeareferencebrowser/macros/popup" />

-->
  </tal:comment>

  <metal:view_macro define-macro="view">
  <tal:view_macro define="geotags python:field.getAccessor(here)();
                          hideMap hideMap|nothing"
                  condition="geotags">

    <link rel="stylesheet" type="text/css" href="http://serverapi.arcgisonline.com/jsapi/arcgis/2.7/js/dojo/dijit/themes/claro/claro.css" tal:condition="not:hideMap">

    <script type="text/javascript" tal:content="string:(function(){var djConfig = {parseOnLoad: true};})" tal:condition="not:hideMap"></script>
    <script type="text/javascript" src="http://serverapi.arcgisonline.com/jsapi/arcgis/?v=2.7" tal:condition="not:hideMap"></script>
    <script type="text/javascript"
            tal:condition="not:hideMap"
            tal:content="structure string:(function () {
      'use strict';
      dojo.require('dijit.layout.BorderContainer');
      dojo.require('dijit.layout.ContentPane');
      dojo.require('esri.map');
      dojo.require('esri.dijit.Scalebar');

      var map;

      function showLoading() {
        var loading;
        loading = dojo.byId('esriMapLoadingImg');
        esri.show(loading);
        map.disableMapNavigation();
        map.hideZoomSlider();
      }

      function hideLoading(error) {
        var loading;
        loading = dojo.byId('esriMapLoadingImg');
        esri.hide(loading);
        map.enableMapNavigation();
        map.showZoomSlider();
      }

      // Draw a point on map
      function drawPoints() {
       var contextURL, infoSymbol, infoTemplate;

       contextURL = window.location.href;
       infoSymbol = new esri.symbol.SimpleMarkerSymbol().setSize(10).setColor(new dojo.Color('#B1C748'));
       infoTemplate = new esri.InfoTemplate('$${Name}', '$${Addr}');

       jQuery.getJSON(contextURL + '/eea.geotags.jsondata', {}, function (data) {
               jQuery.each(data.features, function (i, item) {
                 var geometry, mapPoint;
                 geometry = new esri.geometry.Point(item.properties.center[1], item.properties.center[0]);
                 geometry = esri.geometry.geographicToWebMercator(geometry);

                 mapPoint = new esri.Graphic({'geometry': geometry,
                                              'attributes': {'Name': 'Location',
                                                             'Addr': item.properties.description}});
                 mapPoint.setSymbol(infoSymbol);
                 mapPoint.setInfoTemplate(infoTemplate);
                 map.graphics.add(mapPoint);
               });
       });
      }

      function init() {
        // To get initial coordonates, zoom to default location and run in debuger: dojo.toJson(map.extent.toJson());
        var initExtent, basemap;
        initExtent = new esri.geometry.Extent({'xmin': -40, 'ymin': 30, 'xmax': 122, 'ymax': 74, 'spatialReference': {'wkid': 102100}});
        basemap = new esri.layers.ArcGISTiledMapServiceLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer');
        map = new esri.Map('esriMap', {'extent': esri.geometry.geographicToWebMercator(initExtent),
                                       'wrapAround180': true,
                                       'fadeOnZoom': true,
                                       'force3DTransforms': true,
                                       'isScrollWheelZoom': false,
                                       'navigationMode': 'css-transforms'});
        map.addLayer(basemap);

        // Loading images
        dojo.connect(map, 'onUpdateStart', showLoading);
        dojo.connect(map, 'onUpdateEnd', hideLoading);

        dojo.connect(map, 'onLoad', function () {
          // Resize the map when the browser resizes
          dojo.connect(dijit.byId('map'), 'resize', map, map.resize);
          map.infoWindow.resize(140, 130);

          // Draw a point on map
          drawPoints();

          // Scalebar
          var scalebar = new esri.dijit.Scalebar({
            map: map,
            scalebarUnit: 'metric', // Use 'english' for miles
            attachTo: 'bottom-left'
          });

          // Hack to disable scroll wheel zooming, as map.disableScrollWheelZoom() has no effect
          map.onMouseWheel = function () {};
        });
      }

      dojo.addOnLoad(init);

    })()"></script>

    <!-- dl class="portalMessage info">
        <dt>Info</dt>
        <dd>Changes saved.</dd>
    </dl -->

    <div id="esriMap" class="claro" tal:condition="not:hideMap">
        <img id="esriMapLoadingImg"
             src="loading.gif"
             tal:attributes="src string:$portal_url/loading.gif" />
    </div>

    <div class="location-listing">
          <span i18n:translate="">Location:</span>
          <span tal:repeat="tag geotags">
              <a href="#esriMap" title=""
                 tal:content="tag"
                 tal:attributes="title tag;
                                 href python:context.absolute_url() + '#esriMap'" />
          </span>
    </div>
    <br />
  </tal:view_macro>
  </metal:view_macro>

  <div metal:define-macro="location" tal:define="
    base_url python: request.URL1.split('portal_factory')[0] if 'portal_factory' in request.URL1 else '';
    dialog python:base_url + widget.dialog;
    sidebar python:base_url + widget.sidebar;
    basket python:base_url + widget.basket;
    json python:base_url + widget.json;
    suggestions python:base_url + widget.suggestions;
    multiline python:field.multiline and 1 or 0;
    geojson python:field.getJSON(here);
    geojson python:widget.postback and request.get(fieldName, geojson) or geojson;
    ">

    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=true"></script>
    <div tal:define="label python:widget and widget.Label(here) or ''"
    tal:attributes="
      id fieldName;
      title string:Edit $label"></div>
    <textarea tal:attributes="name fieldName" style="display: none" rows="10"
      tal:content="geojson"></textarea>
    <div tal:attributes="id string:$fieldName-geopreview"></div>
    <input type="button" name="edit" i18n:attributes="value" value="Edit"
    tal:attributes="id string:$fieldName-edit" />
    <script type="text/javascript" tal:content="string:
      (function(){
        var name = '$fieldName';
        var basket = '$basket';
        var sidebar = '$sidebar';
        var dialog = '$dialog';
        var json = '$json';
        var multiline = $multiline;
        var suggestions = '$suggestions';

        var settings = {
          template: dialog,
          sidebar: {
            json: json,
            template: sidebar,
            suggestions: suggestions,
            fieldName: name
          },
          map: {
            json: json,
            fieldName: name
          },
          basket: {
            json: json,
            template: basket,
            fieldName: name,
            multiline: multiline
          }
        };

        var geojson = $geojson;
        if(geojson.features){
          settings.basket.geojson = geojson;
        }

        // Initialize popup
        jQuery(document).ready(function(){
          var geo = jQuery('#' + name).geodialog(settings);
          jQuery('#' + name + '-edit').click(function(){
            geo.dialog('open');
          });
        });

        // Display map
        jQuery(document).ready(function(){
            useTimeout = false;
            if (jQuery.browser.msie){
                if (parseInt(jQuery.browser.version, 10) == 8){
                    // If the browser is IE 8 we delay the init of the preview, otherwise we get an error from google maps main.js
                    useTimeout = true;
                }
            }
            if (useTimeout){
                setTimeout(function(){jQuery('#' + name + '-geopreview').geopreview({fieldName: name,json: geojson})}, 10000);
            }
            else{
                jQuery('#' + name + '-geopreview').geopreview({
                    fieldName: name,
                    json: geojson
                });
            }
        });
      })();
    "></script>
  </div>

  <metal:edit_macro define-macro="edit">
    <metal:use use-macro="field_macro | here/widgets/field/macros/edit">
      <metal:fill fill-slot="widget_body">
        <metal:use use-macro="here/eea.geotags/macros/location" />
      </metal:fill>
    </metal:use>
  </metal:edit_macro>

  <metal:search_macro define-macro="search">
    <div metal:use-macro="here/eea.geotags/macros/edit"></div>
  </metal:search_macro>

</body>
</html>
